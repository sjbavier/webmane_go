// Code generated by ent, DO NOT EDIT.

package music

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the music type in the database.
	Label = "music"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPath holds the string denoting the path field in the database.
	FieldPath = "path"
	// FieldLastUpdate holds the string denoting the last_update field in the database.
	FieldLastUpdate = "last_update"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldArtist holds the string denoting the artist field in the database.
	FieldArtist = "artist"
	// FieldAlbum holds the string denoting the album field in the database.
	FieldAlbum = "album"
	// FieldGenre holds the string denoting the genre field in the database.
	FieldGenre = "genre"
	// FieldReleaseYear holds the string denoting the release_year field in the database.
	FieldReleaseYear = "release_year"
	// FieldCoverArt holds the string denoting the cover_art field in the database.
	FieldCoverArt = "cover_art"
	// Table holds the table name of the music in the database.
	Table = "musics"
)

// Columns holds all SQL columns for music fields.
var Columns = []string{
	FieldID,
	FieldPath,
	FieldLastUpdate,
	FieldTitle,
	FieldArtist,
	FieldAlbum,
	FieldGenre,
	FieldReleaseYear,
	FieldCoverArt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// PathValidator is a validator for the "path" field. It is called by the builders before save.
	PathValidator func(string) error
	// DefaultLastUpdate holds the default value on creation for the "last_update" field.
	DefaultLastUpdate func() time.Time
	// UpdateDefaultLastUpdate holds the default value on update for the "last_update" field.
	UpdateDefaultLastUpdate func() time.Time
	// TitleValidator is a validator for the "title" field. It is called by the builders before save.
	TitleValidator func(string) error
	// ArtistValidator is a validator for the "artist" field. It is called by the builders before save.
	ArtistValidator func(string) error
	// AlbumValidator is a validator for the "album" field. It is called by the builders before save.
	AlbumValidator func(string) error
	// GenreValidator is a validator for the "genre" field. It is called by the builders before save.
	GenreValidator func(string) error
	// ReleaseYearValidator is a validator for the "release_year" field. It is called by the builders before save.
	ReleaseYearValidator func(string) error
)

// OrderOption defines the ordering options for the Music queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByPath orders the results by the path field.
func ByPath(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPath, opts...).ToFunc()
}

// ByLastUpdate orders the results by the last_update field.
func ByLastUpdate(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLastUpdate, opts...).ToFunc()
}

// ByTitle orders the results by the title field.
func ByTitle(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTitle, opts...).ToFunc()
}

// ByArtist orders the results by the artist field.
func ByArtist(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldArtist, opts...).ToFunc()
}

// ByAlbum orders the results by the album field.
func ByAlbum(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAlbum, opts...).ToFunc()
}

// ByGenre orders the results by the genre field.
func ByGenre(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGenre, opts...).ToFunc()
}

// ByReleaseYear orders the results by the release_year field.
func ByReleaseYear(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldReleaseYear, opts...).ToFunc()
}

// ByCoverArt orders the results by the cover_art field.
func ByCoverArt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCoverArt, opts...).ToFunc()
}
