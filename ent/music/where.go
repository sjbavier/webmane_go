// Code generated by ent, DO NOT EDIT.

package music

import (
	"time"
	"webmane_go/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Music {
	return predicate.Music(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Music {
	return predicate.Music(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Music {
	return predicate.Music(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Music {
	return predicate.Music(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Music {
	return predicate.Music(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Music {
	return predicate.Music(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Music {
	return predicate.Music(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Music {
	return predicate.Music(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Music {
	return predicate.Music(sql.FieldLTE(FieldID, id))
}

// Path applies equality check predicate on the "path" field. It's identical to PathEQ.
func Path(v string) predicate.Music {
	return predicate.Music(sql.FieldEQ(FieldPath, v))
}

// LastUpdate applies equality check predicate on the "last_update" field. It's identical to LastUpdateEQ.
func LastUpdate(v time.Time) predicate.Music {
	return predicate.Music(sql.FieldEQ(FieldLastUpdate, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Music {
	return predicate.Music(sql.FieldEQ(FieldTitle, v))
}

// Artist applies equality check predicate on the "artist" field. It's identical to ArtistEQ.
func Artist(v string) predicate.Music {
	return predicate.Music(sql.FieldEQ(FieldArtist, v))
}

// Album applies equality check predicate on the "album" field. It's identical to AlbumEQ.
func Album(v string) predicate.Music {
	return predicate.Music(sql.FieldEQ(FieldAlbum, v))
}

// Genre applies equality check predicate on the "genre" field. It's identical to GenreEQ.
func Genre(v string) predicate.Music {
	return predicate.Music(sql.FieldEQ(FieldGenre, v))
}

// ReleaseYear applies equality check predicate on the "release_year" field. It's identical to ReleaseYearEQ.
func ReleaseYear(v string) predicate.Music {
	return predicate.Music(sql.FieldEQ(FieldReleaseYear, v))
}

// CoverArt applies equality check predicate on the "cover_art" field. It's identical to CoverArtEQ.
func CoverArt(v string) predicate.Music {
	return predicate.Music(sql.FieldEQ(FieldCoverArt, v))
}

// PathEQ applies the EQ predicate on the "path" field.
func PathEQ(v string) predicate.Music {
	return predicate.Music(sql.FieldEQ(FieldPath, v))
}

// PathNEQ applies the NEQ predicate on the "path" field.
func PathNEQ(v string) predicate.Music {
	return predicate.Music(sql.FieldNEQ(FieldPath, v))
}

// PathIn applies the In predicate on the "path" field.
func PathIn(vs ...string) predicate.Music {
	return predicate.Music(sql.FieldIn(FieldPath, vs...))
}

// PathNotIn applies the NotIn predicate on the "path" field.
func PathNotIn(vs ...string) predicate.Music {
	return predicate.Music(sql.FieldNotIn(FieldPath, vs...))
}

// PathGT applies the GT predicate on the "path" field.
func PathGT(v string) predicate.Music {
	return predicate.Music(sql.FieldGT(FieldPath, v))
}

// PathGTE applies the GTE predicate on the "path" field.
func PathGTE(v string) predicate.Music {
	return predicate.Music(sql.FieldGTE(FieldPath, v))
}

// PathLT applies the LT predicate on the "path" field.
func PathLT(v string) predicate.Music {
	return predicate.Music(sql.FieldLT(FieldPath, v))
}

// PathLTE applies the LTE predicate on the "path" field.
func PathLTE(v string) predicate.Music {
	return predicate.Music(sql.FieldLTE(FieldPath, v))
}

// PathContains applies the Contains predicate on the "path" field.
func PathContains(v string) predicate.Music {
	return predicate.Music(sql.FieldContains(FieldPath, v))
}

// PathHasPrefix applies the HasPrefix predicate on the "path" field.
func PathHasPrefix(v string) predicate.Music {
	return predicate.Music(sql.FieldHasPrefix(FieldPath, v))
}

// PathHasSuffix applies the HasSuffix predicate on the "path" field.
func PathHasSuffix(v string) predicate.Music {
	return predicate.Music(sql.FieldHasSuffix(FieldPath, v))
}

// PathEqualFold applies the EqualFold predicate on the "path" field.
func PathEqualFold(v string) predicate.Music {
	return predicate.Music(sql.FieldEqualFold(FieldPath, v))
}

// PathContainsFold applies the ContainsFold predicate on the "path" field.
func PathContainsFold(v string) predicate.Music {
	return predicate.Music(sql.FieldContainsFold(FieldPath, v))
}

// LastUpdateEQ applies the EQ predicate on the "last_update" field.
func LastUpdateEQ(v time.Time) predicate.Music {
	return predicate.Music(sql.FieldEQ(FieldLastUpdate, v))
}

// LastUpdateNEQ applies the NEQ predicate on the "last_update" field.
func LastUpdateNEQ(v time.Time) predicate.Music {
	return predicate.Music(sql.FieldNEQ(FieldLastUpdate, v))
}

// LastUpdateIn applies the In predicate on the "last_update" field.
func LastUpdateIn(vs ...time.Time) predicate.Music {
	return predicate.Music(sql.FieldIn(FieldLastUpdate, vs...))
}

// LastUpdateNotIn applies the NotIn predicate on the "last_update" field.
func LastUpdateNotIn(vs ...time.Time) predicate.Music {
	return predicate.Music(sql.FieldNotIn(FieldLastUpdate, vs...))
}

// LastUpdateGT applies the GT predicate on the "last_update" field.
func LastUpdateGT(v time.Time) predicate.Music {
	return predicate.Music(sql.FieldGT(FieldLastUpdate, v))
}

// LastUpdateGTE applies the GTE predicate on the "last_update" field.
func LastUpdateGTE(v time.Time) predicate.Music {
	return predicate.Music(sql.FieldGTE(FieldLastUpdate, v))
}

// LastUpdateLT applies the LT predicate on the "last_update" field.
func LastUpdateLT(v time.Time) predicate.Music {
	return predicate.Music(sql.FieldLT(FieldLastUpdate, v))
}

// LastUpdateLTE applies the LTE predicate on the "last_update" field.
func LastUpdateLTE(v time.Time) predicate.Music {
	return predicate.Music(sql.FieldLTE(FieldLastUpdate, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Music {
	return predicate.Music(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Music {
	return predicate.Music(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Music {
	return predicate.Music(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Music {
	return predicate.Music(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Music {
	return predicate.Music(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Music {
	return predicate.Music(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Music {
	return predicate.Music(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Music {
	return predicate.Music(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Music {
	return predicate.Music(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Music {
	return predicate.Music(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Music {
	return predicate.Music(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleIsNil applies the IsNil predicate on the "title" field.
func TitleIsNil() predicate.Music {
	return predicate.Music(sql.FieldIsNull(FieldTitle))
}

// TitleNotNil applies the NotNil predicate on the "title" field.
func TitleNotNil() predicate.Music {
	return predicate.Music(sql.FieldNotNull(FieldTitle))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Music {
	return predicate.Music(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Music {
	return predicate.Music(sql.FieldContainsFold(FieldTitle, v))
}

// ArtistEQ applies the EQ predicate on the "artist" field.
func ArtistEQ(v string) predicate.Music {
	return predicate.Music(sql.FieldEQ(FieldArtist, v))
}

// ArtistNEQ applies the NEQ predicate on the "artist" field.
func ArtistNEQ(v string) predicate.Music {
	return predicate.Music(sql.FieldNEQ(FieldArtist, v))
}

// ArtistIn applies the In predicate on the "artist" field.
func ArtistIn(vs ...string) predicate.Music {
	return predicate.Music(sql.FieldIn(FieldArtist, vs...))
}

// ArtistNotIn applies the NotIn predicate on the "artist" field.
func ArtistNotIn(vs ...string) predicate.Music {
	return predicate.Music(sql.FieldNotIn(FieldArtist, vs...))
}

// ArtistGT applies the GT predicate on the "artist" field.
func ArtistGT(v string) predicate.Music {
	return predicate.Music(sql.FieldGT(FieldArtist, v))
}

// ArtistGTE applies the GTE predicate on the "artist" field.
func ArtistGTE(v string) predicate.Music {
	return predicate.Music(sql.FieldGTE(FieldArtist, v))
}

// ArtistLT applies the LT predicate on the "artist" field.
func ArtistLT(v string) predicate.Music {
	return predicate.Music(sql.FieldLT(FieldArtist, v))
}

// ArtistLTE applies the LTE predicate on the "artist" field.
func ArtistLTE(v string) predicate.Music {
	return predicate.Music(sql.FieldLTE(FieldArtist, v))
}

// ArtistContains applies the Contains predicate on the "artist" field.
func ArtistContains(v string) predicate.Music {
	return predicate.Music(sql.FieldContains(FieldArtist, v))
}

// ArtistHasPrefix applies the HasPrefix predicate on the "artist" field.
func ArtistHasPrefix(v string) predicate.Music {
	return predicate.Music(sql.FieldHasPrefix(FieldArtist, v))
}

// ArtistHasSuffix applies the HasSuffix predicate on the "artist" field.
func ArtistHasSuffix(v string) predicate.Music {
	return predicate.Music(sql.FieldHasSuffix(FieldArtist, v))
}

// ArtistIsNil applies the IsNil predicate on the "artist" field.
func ArtistIsNil() predicate.Music {
	return predicate.Music(sql.FieldIsNull(FieldArtist))
}

// ArtistNotNil applies the NotNil predicate on the "artist" field.
func ArtistNotNil() predicate.Music {
	return predicate.Music(sql.FieldNotNull(FieldArtist))
}

// ArtistEqualFold applies the EqualFold predicate on the "artist" field.
func ArtistEqualFold(v string) predicate.Music {
	return predicate.Music(sql.FieldEqualFold(FieldArtist, v))
}

// ArtistContainsFold applies the ContainsFold predicate on the "artist" field.
func ArtistContainsFold(v string) predicate.Music {
	return predicate.Music(sql.FieldContainsFold(FieldArtist, v))
}

// AlbumEQ applies the EQ predicate on the "album" field.
func AlbumEQ(v string) predicate.Music {
	return predicate.Music(sql.FieldEQ(FieldAlbum, v))
}

// AlbumNEQ applies the NEQ predicate on the "album" field.
func AlbumNEQ(v string) predicate.Music {
	return predicate.Music(sql.FieldNEQ(FieldAlbum, v))
}

// AlbumIn applies the In predicate on the "album" field.
func AlbumIn(vs ...string) predicate.Music {
	return predicate.Music(sql.FieldIn(FieldAlbum, vs...))
}

// AlbumNotIn applies the NotIn predicate on the "album" field.
func AlbumNotIn(vs ...string) predicate.Music {
	return predicate.Music(sql.FieldNotIn(FieldAlbum, vs...))
}

// AlbumGT applies the GT predicate on the "album" field.
func AlbumGT(v string) predicate.Music {
	return predicate.Music(sql.FieldGT(FieldAlbum, v))
}

// AlbumGTE applies the GTE predicate on the "album" field.
func AlbumGTE(v string) predicate.Music {
	return predicate.Music(sql.FieldGTE(FieldAlbum, v))
}

// AlbumLT applies the LT predicate on the "album" field.
func AlbumLT(v string) predicate.Music {
	return predicate.Music(sql.FieldLT(FieldAlbum, v))
}

// AlbumLTE applies the LTE predicate on the "album" field.
func AlbumLTE(v string) predicate.Music {
	return predicate.Music(sql.FieldLTE(FieldAlbum, v))
}

// AlbumContains applies the Contains predicate on the "album" field.
func AlbumContains(v string) predicate.Music {
	return predicate.Music(sql.FieldContains(FieldAlbum, v))
}

// AlbumHasPrefix applies the HasPrefix predicate on the "album" field.
func AlbumHasPrefix(v string) predicate.Music {
	return predicate.Music(sql.FieldHasPrefix(FieldAlbum, v))
}

// AlbumHasSuffix applies the HasSuffix predicate on the "album" field.
func AlbumHasSuffix(v string) predicate.Music {
	return predicate.Music(sql.FieldHasSuffix(FieldAlbum, v))
}

// AlbumIsNil applies the IsNil predicate on the "album" field.
func AlbumIsNil() predicate.Music {
	return predicate.Music(sql.FieldIsNull(FieldAlbum))
}

// AlbumNotNil applies the NotNil predicate on the "album" field.
func AlbumNotNil() predicate.Music {
	return predicate.Music(sql.FieldNotNull(FieldAlbum))
}

// AlbumEqualFold applies the EqualFold predicate on the "album" field.
func AlbumEqualFold(v string) predicate.Music {
	return predicate.Music(sql.FieldEqualFold(FieldAlbum, v))
}

// AlbumContainsFold applies the ContainsFold predicate on the "album" field.
func AlbumContainsFold(v string) predicate.Music {
	return predicate.Music(sql.FieldContainsFold(FieldAlbum, v))
}

// GenreEQ applies the EQ predicate on the "genre" field.
func GenreEQ(v string) predicate.Music {
	return predicate.Music(sql.FieldEQ(FieldGenre, v))
}

// GenreNEQ applies the NEQ predicate on the "genre" field.
func GenreNEQ(v string) predicate.Music {
	return predicate.Music(sql.FieldNEQ(FieldGenre, v))
}

// GenreIn applies the In predicate on the "genre" field.
func GenreIn(vs ...string) predicate.Music {
	return predicate.Music(sql.FieldIn(FieldGenre, vs...))
}

// GenreNotIn applies the NotIn predicate on the "genre" field.
func GenreNotIn(vs ...string) predicate.Music {
	return predicate.Music(sql.FieldNotIn(FieldGenre, vs...))
}

// GenreGT applies the GT predicate on the "genre" field.
func GenreGT(v string) predicate.Music {
	return predicate.Music(sql.FieldGT(FieldGenre, v))
}

// GenreGTE applies the GTE predicate on the "genre" field.
func GenreGTE(v string) predicate.Music {
	return predicate.Music(sql.FieldGTE(FieldGenre, v))
}

// GenreLT applies the LT predicate on the "genre" field.
func GenreLT(v string) predicate.Music {
	return predicate.Music(sql.FieldLT(FieldGenre, v))
}

// GenreLTE applies the LTE predicate on the "genre" field.
func GenreLTE(v string) predicate.Music {
	return predicate.Music(sql.FieldLTE(FieldGenre, v))
}

// GenreContains applies the Contains predicate on the "genre" field.
func GenreContains(v string) predicate.Music {
	return predicate.Music(sql.FieldContains(FieldGenre, v))
}

// GenreHasPrefix applies the HasPrefix predicate on the "genre" field.
func GenreHasPrefix(v string) predicate.Music {
	return predicate.Music(sql.FieldHasPrefix(FieldGenre, v))
}

// GenreHasSuffix applies the HasSuffix predicate on the "genre" field.
func GenreHasSuffix(v string) predicate.Music {
	return predicate.Music(sql.FieldHasSuffix(FieldGenre, v))
}

// GenreIsNil applies the IsNil predicate on the "genre" field.
func GenreIsNil() predicate.Music {
	return predicate.Music(sql.FieldIsNull(FieldGenre))
}

// GenreNotNil applies the NotNil predicate on the "genre" field.
func GenreNotNil() predicate.Music {
	return predicate.Music(sql.FieldNotNull(FieldGenre))
}

// GenreEqualFold applies the EqualFold predicate on the "genre" field.
func GenreEqualFold(v string) predicate.Music {
	return predicate.Music(sql.FieldEqualFold(FieldGenre, v))
}

// GenreContainsFold applies the ContainsFold predicate on the "genre" field.
func GenreContainsFold(v string) predicate.Music {
	return predicate.Music(sql.FieldContainsFold(FieldGenre, v))
}

// ReleaseYearEQ applies the EQ predicate on the "release_year" field.
func ReleaseYearEQ(v string) predicate.Music {
	return predicate.Music(sql.FieldEQ(FieldReleaseYear, v))
}

// ReleaseYearNEQ applies the NEQ predicate on the "release_year" field.
func ReleaseYearNEQ(v string) predicate.Music {
	return predicate.Music(sql.FieldNEQ(FieldReleaseYear, v))
}

// ReleaseYearIn applies the In predicate on the "release_year" field.
func ReleaseYearIn(vs ...string) predicate.Music {
	return predicate.Music(sql.FieldIn(FieldReleaseYear, vs...))
}

// ReleaseYearNotIn applies the NotIn predicate on the "release_year" field.
func ReleaseYearNotIn(vs ...string) predicate.Music {
	return predicate.Music(sql.FieldNotIn(FieldReleaseYear, vs...))
}

// ReleaseYearGT applies the GT predicate on the "release_year" field.
func ReleaseYearGT(v string) predicate.Music {
	return predicate.Music(sql.FieldGT(FieldReleaseYear, v))
}

// ReleaseYearGTE applies the GTE predicate on the "release_year" field.
func ReleaseYearGTE(v string) predicate.Music {
	return predicate.Music(sql.FieldGTE(FieldReleaseYear, v))
}

// ReleaseYearLT applies the LT predicate on the "release_year" field.
func ReleaseYearLT(v string) predicate.Music {
	return predicate.Music(sql.FieldLT(FieldReleaseYear, v))
}

// ReleaseYearLTE applies the LTE predicate on the "release_year" field.
func ReleaseYearLTE(v string) predicate.Music {
	return predicate.Music(sql.FieldLTE(FieldReleaseYear, v))
}

// ReleaseYearContains applies the Contains predicate on the "release_year" field.
func ReleaseYearContains(v string) predicate.Music {
	return predicate.Music(sql.FieldContains(FieldReleaseYear, v))
}

// ReleaseYearHasPrefix applies the HasPrefix predicate on the "release_year" field.
func ReleaseYearHasPrefix(v string) predicate.Music {
	return predicate.Music(sql.FieldHasPrefix(FieldReleaseYear, v))
}

// ReleaseYearHasSuffix applies the HasSuffix predicate on the "release_year" field.
func ReleaseYearHasSuffix(v string) predicate.Music {
	return predicate.Music(sql.FieldHasSuffix(FieldReleaseYear, v))
}

// ReleaseYearIsNil applies the IsNil predicate on the "release_year" field.
func ReleaseYearIsNil() predicate.Music {
	return predicate.Music(sql.FieldIsNull(FieldReleaseYear))
}

// ReleaseYearNotNil applies the NotNil predicate on the "release_year" field.
func ReleaseYearNotNil() predicate.Music {
	return predicate.Music(sql.FieldNotNull(FieldReleaseYear))
}

// ReleaseYearEqualFold applies the EqualFold predicate on the "release_year" field.
func ReleaseYearEqualFold(v string) predicate.Music {
	return predicate.Music(sql.FieldEqualFold(FieldReleaseYear, v))
}

// ReleaseYearContainsFold applies the ContainsFold predicate on the "release_year" field.
func ReleaseYearContainsFold(v string) predicate.Music {
	return predicate.Music(sql.FieldContainsFold(FieldReleaseYear, v))
}

// CoverArtEQ applies the EQ predicate on the "cover_art" field.
func CoverArtEQ(v string) predicate.Music {
	return predicate.Music(sql.FieldEQ(FieldCoverArt, v))
}

// CoverArtNEQ applies the NEQ predicate on the "cover_art" field.
func CoverArtNEQ(v string) predicate.Music {
	return predicate.Music(sql.FieldNEQ(FieldCoverArt, v))
}

// CoverArtIn applies the In predicate on the "cover_art" field.
func CoverArtIn(vs ...string) predicate.Music {
	return predicate.Music(sql.FieldIn(FieldCoverArt, vs...))
}

// CoverArtNotIn applies the NotIn predicate on the "cover_art" field.
func CoverArtNotIn(vs ...string) predicate.Music {
	return predicate.Music(sql.FieldNotIn(FieldCoverArt, vs...))
}

// CoverArtGT applies the GT predicate on the "cover_art" field.
func CoverArtGT(v string) predicate.Music {
	return predicate.Music(sql.FieldGT(FieldCoverArt, v))
}

// CoverArtGTE applies the GTE predicate on the "cover_art" field.
func CoverArtGTE(v string) predicate.Music {
	return predicate.Music(sql.FieldGTE(FieldCoverArt, v))
}

// CoverArtLT applies the LT predicate on the "cover_art" field.
func CoverArtLT(v string) predicate.Music {
	return predicate.Music(sql.FieldLT(FieldCoverArt, v))
}

// CoverArtLTE applies the LTE predicate on the "cover_art" field.
func CoverArtLTE(v string) predicate.Music {
	return predicate.Music(sql.FieldLTE(FieldCoverArt, v))
}

// CoverArtContains applies the Contains predicate on the "cover_art" field.
func CoverArtContains(v string) predicate.Music {
	return predicate.Music(sql.FieldContains(FieldCoverArt, v))
}

// CoverArtHasPrefix applies the HasPrefix predicate on the "cover_art" field.
func CoverArtHasPrefix(v string) predicate.Music {
	return predicate.Music(sql.FieldHasPrefix(FieldCoverArt, v))
}

// CoverArtHasSuffix applies the HasSuffix predicate on the "cover_art" field.
func CoverArtHasSuffix(v string) predicate.Music {
	return predicate.Music(sql.FieldHasSuffix(FieldCoverArt, v))
}

// CoverArtIsNil applies the IsNil predicate on the "cover_art" field.
func CoverArtIsNil() predicate.Music {
	return predicate.Music(sql.FieldIsNull(FieldCoverArt))
}

// CoverArtNotNil applies the NotNil predicate on the "cover_art" field.
func CoverArtNotNil() predicate.Music {
	return predicate.Music(sql.FieldNotNull(FieldCoverArt))
}

// CoverArtEqualFold applies the EqualFold predicate on the "cover_art" field.
func CoverArtEqualFold(v string) predicate.Music {
	return predicate.Music(sql.FieldEqualFold(FieldCoverArt, v))
}

// CoverArtContainsFold applies the ContainsFold predicate on the "cover_art" field.
func CoverArtContainsFold(v string) predicate.Music {
	return predicate.Music(sql.FieldContainsFold(FieldCoverArt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Music) predicate.Music {
	return predicate.Music(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Music) predicate.Music {
	return predicate.Music(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Music) predicate.Music {
	return predicate.Music(sql.NotPredicates(p))
}
