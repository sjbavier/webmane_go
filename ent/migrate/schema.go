// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// MusicEntColumns holds the columns for the "music_ent" table.
	MusicEntColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "path", Type: field.TypeString, Unique: true, Size: 500},
		{Name: "last_update", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "artist", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "album", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "genre", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "release_year", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "cover_art", Type: field.TypeString, Nullable: true},
	}
	// MusicEntTable holds the schema information for the "music_ent" table.
	MusicEntTable = &schema.Table{
		Name:       "music_ent",
		Columns:    MusicEntColumns,
		PrimaryKey: []*schema.Column{MusicEntColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "music_path",
				Unique:  false,
				Columns: []*schema.Column{MusicEntColumns[1]},
			},
		},
	}
	// PlaylistsColumns holds the columns for the "playlists" table.
	PlaylistsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Size: 255},
		{Name: "last_update", Type: field.TypeTime},
		{Name: "last_accessed", Type: field.TypeTime, Nullable: true},
		{Name: "cover_art", Type: field.TypeString, Nullable: true},
	}
	// PlaylistsTable holds the schema information for the "playlists" table.
	PlaylistsTable = &schema.Table{
		Name:       "playlists",
		Columns:    PlaylistsColumns,
		PrimaryKey: []*schema.Column{PlaylistsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "playlist_name",
				Unique:  false,
				Columns: []*schema.Column{PlaylistsColumns[1]},
			},
		},
	}
	// PlaylistSongsColumns holds the columns for the "playlist_songs" table.
	PlaylistSongsColumns = []*schema.Column{
		{Name: "playlist_id", Type: field.TypeInt},
		{Name: "music_id", Type: field.TypeInt},
	}
	// PlaylistSongsTable holds the schema information for the "playlist_songs" table.
	PlaylistSongsTable = &schema.Table{
		Name:       "playlist_songs",
		Columns:    PlaylistSongsColumns,
		PrimaryKey: []*schema.Column{PlaylistSongsColumns[0], PlaylistSongsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "playlist_songs_playlist_id",
				Columns:    []*schema.Column{PlaylistSongsColumns[0]},
				RefColumns: []*schema.Column{PlaylistsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "playlist_songs_music_id",
				Columns:    []*schema.Column{PlaylistSongsColumns[1]},
				RefColumns: []*schema.Column{MusicEntColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		MusicEntTable,
		PlaylistsTable,
		PlaylistSongsTable,
	}
)

func init() {
	MusicEntTable.Annotation = &entsql.Annotation{
		Table: "music_ent",
	}
	PlaylistsTable.Annotation = &entsql.Annotation{
		Table: "playlists",
	}
	PlaylistSongsTable.ForeignKeys[0].RefTable = PlaylistsTable
	PlaylistSongsTable.ForeignKeys[1].RefTable = MusicEntTable
}
